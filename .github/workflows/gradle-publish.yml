# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  push:
    tags:
      - '*'

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 19
      uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Gradle
      run: chmod +x gradlew
    - name: Build with Gradle
      env:
        REPO_URL: ${{ secrets.REPO_URL }}
      run: ./gradlew clean shadowJar
    - name: CheckStyle
      env:
        REPO_URL: ${{ secrets.REPO_URL }}
      run: ./gradlew checkstyleMain
    - name: Login to docker
      env:
        REPO_URL: ${{ secrets.REPO_URL }}
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
    - name: Build and Push docker image
      env:
        REPO_URL: ${{ secrets.REPO_URL }}
      run: ./gradlew dockerPushDockerHub
    - name: Publish to GitHub Packages
      env:
        USERNAME: ${{ secrets.USERNAME }}
        TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PROJECT_VERSION: ${{ github.ref_name }}
        REPO_URL: ${{ secrets.REPO_URL }}
      run: ./gradlew publish
